// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: muvtuber/sayer/v1/sayer.proto

// Sayer is the TTS (Text To Speech) service. It is used to convert text to
// speech

package sayerv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The role of the speaker
	Role string `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	// The text to be converted to speech
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *SayRequest) Reset() {
	*x = SayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_muvtuber_sayer_v1_sayer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SayRequest) ProtoMessage() {}

func (x *SayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_muvtuber_sayer_v1_sayer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SayRequest.ProtoReflect.Descriptor instead.
func (*SayRequest) Descriptor() ([]byte, []int) {
	return file_muvtuber_sayer_v1_sayer_proto_rawDescGZIP(), []int{0}
}

func (x *SayRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *SayRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type SayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The format of the audio file
	Format string `protobuf:"bytes,1,opt,name=format,proto3" json:"format,omitempty"`
	// The audio file containing the speech
	Audio []byte `protobuf:"bytes,2,opt,name=audio,proto3" json:"audio,omitempty"`
}

func (x *SayResponse) Reset() {
	*x = SayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_muvtuber_sayer_v1_sayer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SayResponse) ProtoMessage() {}

func (x *SayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_muvtuber_sayer_v1_sayer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SayResponse.ProtoReflect.Descriptor instead.
func (*SayResponse) Descriptor() ([]byte, []int) {
	return file_muvtuber_sayer_v1_sayer_proto_rawDescGZIP(), []int{1}
}

func (x *SayResponse) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *SayResponse) GetAudio() []byte {
	if x != nil {
		return x.Audio
	}
	return nil
}

var File_muvtuber_sayer_v1_sayer_proto protoreflect.FileDescriptor

var file_muvtuber_sayer_v1_sayer_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x6d, 0x75, 0x76, 0x74, 0x75, 0x62, 0x65, 0x72, 0x2f, 0x73, 0x61, 0x79, 0x65, 0x72,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x11, 0x6d, 0x75, 0x76, 0x74, 0x75, 0x62, 0x65, 0x72, 0x2e, 0x73, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x22, 0x34, 0x0a, 0x0a, 0x53, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x3b, 0x0a, 0x0b, 0x53, 0x61, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x61, 0x75, 0x64, 0x69, 0x6f, 0x32, 0x54, 0x0a, 0x0c, 0x53, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x03, 0x53, 0x61, 0x79, 0x12, 0x1d, 0x2e, 0x6d,
	0x75, 0x76, 0x74, 0x75, 0x62, 0x65, 0x72, 0x2e, 0x73, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x75,
	0x76, 0x74, 0x75, 0x62, 0x65, 0x72, 0x2e, 0x73, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xb7, 0x01, 0x0a, 0x15,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x75, 0x76, 0x74, 0x75, 0x62, 0x65, 0x72, 0x2e, 0x73, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x53, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x2c, 0x6d, 0x75, 0x76, 0x74, 0x75, 0x62, 0x65, 0x72, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x6d, 0x75, 0x76, 0x74, 0x75, 0x62, 0x65, 0x72,
	0x2f, 0x73, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x61, 0x79, 0x65, 0x72, 0x76,
	0x31, 0xa2, 0x02, 0x03, 0x4d, 0x53, 0x58, 0xaa, 0x02, 0x11, 0x4d, 0x75, 0x76, 0x74, 0x75, 0x62,
	0x65, 0x72, 0x2e, 0x53, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x11, 0x4d, 0x75,
	0x76, 0x74, 0x75, 0x62, 0x65, 0x72, 0x5c, 0x53, 0x61, 0x79, 0x65, 0x72, 0x5c, 0x56, 0x31, 0xe2,
	0x02, 0x1d, 0x4d, 0x75, 0x76, 0x74, 0x75, 0x62, 0x65, 0x72, 0x5c, 0x53, 0x61, 0x79, 0x65, 0x72,
	0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x13, 0x4d, 0x75, 0x76, 0x74, 0x75, 0x62, 0x65, 0x72, 0x3a, 0x3a, 0x53, 0x61, 0x79, 0x65,
	0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_muvtuber_sayer_v1_sayer_proto_rawDescOnce sync.Once
	file_muvtuber_sayer_v1_sayer_proto_rawDescData = file_muvtuber_sayer_v1_sayer_proto_rawDesc
)

func file_muvtuber_sayer_v1_sayer_proto_rawDescGZIP() []byte {
	file_muvtuber_sayer_v1_sayer_proto_rawDescOnce.Do(func() {
		file_muvtuber_sayer_v1_sayer_proto_rawDescData = protoimpl.X.CompressGZIP(file_muvtuber_sayer_v1_sayer_proto_rawDescData)
	})
	return file_muvtuber_sayer_v1_sayer_proto_rawDescData
}

var file_muvtuber_sayer_v1_sayer_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_muvtuber_sayer_v1_sayer_proto_goTypes = []interface{}{
	(*SayRequest)(nil),  // 0: muvtuber.sayer.v1.SayRequest
	(*SayResponse)(nil), // 1: muvtuber.sayer.v1.SayResponse
}
var file_muvtuber_sayer_v1_sayer_proto_depIdxs = []int32{
	0, // 0: muvtuber.sayer.v1.SayerService.Say:input_type -> muvtuber.sayer.v1.SayRequest
	1, // 1: muvtuber.sayer.v1.SayerService.Say:output_type -> muvtuber.sayer.v1.SayResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_muvtuber_sayer_v1_sayer_proto_init() }
func file_muvtuber_sayer_v1_sayer_proto_init() {
	if File_muvtuber_sayer_v1_sayer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_muvtuber_sayer_v1_sayer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_muvtuber_sayer_v1_sayer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_muvtuber_sayer_v1_sayer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_muvtuber_sayer_v1_sayer_proto_goTypes,
		DependencyIndexes: file_muvtuber_sayer_v1_sayer_proto_depIdxs,
		MessageInfos:      file_muvtuber_sayer_v1_sayer_proto_msgTypes,
	}.Build()
	File_muvtuber_sayer_v1_sayer_proto = out.File
	file_muvtuber_sayer_v1_sayer_proto_rawDesc = nil
	file_muvtuber_sayer_v1_sayer_proto_goTypes = nil
	file_muvtuber_sayer_v1_sayer_proto_depIdxs = nil
}
